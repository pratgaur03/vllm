Running: input_len=128, batch_size=32, tp_size=1
INFO 07-01 22:19:19 [__init__.py:239] Automatically detected platform rocm.
Namespace(input_len=128, output_len=32, batch_size=32, n=1, use_beam_search=False, num_iters_warmup=1, num_iters=1, profile=False, profile_result_dir=None, output_json='/results_in128_out32_bs32_tp1.json', disable_detokenize=True, model='/workspace/llama_3.1_70B', task='auto', tokenizer=None, hf_config_path=None, skip_tokenizer_init=False, revision=None, code_revision=None, tokenizer_revision=None, tokenizer_mode='auto', trust_remote_code=False, allowed_local_media_path=None, download_dir=None, load_format='auto', config_format=<ConfigFormat.AUTO: 'auto'>, dtype='float16', kv_cache_dtype='auto', max_model_len=None, guided_decoding_backend='xgrammar', logits_processor_pattern=None, model_impl='auto', distributed_executor_backend=None, pipeline_parallel_size=1, tensor_parallel_size=1, enable_expert_parallel=False, max_parallel_loading_workers=None, ray_workers_use_nsight=False, block_size=None, enable_prefix_caching=None, disable_sliding_window=False, use_v2_block_manager=True, num_lookahead_slots=0, seed=None, swap_space=4, cpu_offload_gb=0, gpu_memory_utilization=0.9, num_gpu_blocks_override=None, max_num_batched_tokens=None, max_num_partial_prefills=1, max_long_partial_prefills=1, long_prefill_token_threshold=0, max_num_seqs=None, max_logprobs=20, disable_log_stats=False, quantization='fp8', rope_scaling=None, rope_theta=None, hf_overrides=None, enforce_eager=False, max_seq_len_to_capture=8192, disable_custom_all_reduce=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config=None, limit_mm_per_prompt=None, mm_processor_kwargs=None, disable_mm_preprocessor_cache=False, enable_lora=False, enable_lora_bias=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=False, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', num_scheduler_steps=1, use_tqdm_on_load=True, multi_step_stream_outputs=True, scheduler_delay_factor=0.0, enable_chunked_prefill=None, speculative_config=None, speculative_model=None, speculative_model_quantization=None, num_speculative_tokens=None, speculative_disable_mqa_scorer=False, speculative_draft_tensor_parallel_size=None, speculative_max_model_len=None, speculative_disable_by_batch_size=None, ngram_prompt_lookup_max=None, ngram_prompt_lookup_min=None, spec_decoding_acceptance_method='rejection_sampler', typical_acceptance_sampler_posterior_threshold=None, typical_acceptance_sampler_posterior_alpha=None, disable_logprobs_during_spec_decoding=None, model_loader_extra_config=None, ignore_patterns=[], preemption_mode=None, served_model_name=None, qlora_adapter_name_or_path=None, show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None, disable_async_output_proc=False, scheduling_policy='fcfs', scheduler_cls='vllm.core.scheduler.Scheduler', override_neuron_config=None, override_pooler_config=None, compilation_config=None, kv_transfer_config=None, worker_cls='auto', worker_extension_cls='', generation_config='auto', override_generation_config=None, enable_sleep_mode=False, calculate_kv_scales=False, additional_config=None, enable_reasoning=False, reasoning_parser=None, disable_cascade_attn=False)
WARNING 07-01 22:19:21 [config.py:2614] Casting torch.bfloat16 to torch.float16.
INFO 07-01 22:19:39 [config.py:585] This model supports multiple tasks: {'reward', 'embed', 'generate', 'score', 'classify'}. Defaulting to 'generate'.
WARNING 07-01 22:19:39 [arg_utils.py:1861] Detected VLLM_USE_V1=1 with cuda. Usage should be considered experimental. Please report any issues on Github.
INFO 07-01 22:19:39 [config.py:1552] Disabled the custom all-reduce kernel because it is not supported on AMD GPUs.
INFO 07-01 22:19:39 [config.py:1697] Chunked prefill is enabled with max_num_batched_tokens=8192.
WARNING 07-01 22:19:39 [fp8.py:54] Detected fp8 checkpoint. Please note that the format is experimental and subject to change.
WARNING 07-01 22:19:40 [utils.py:2181] We must use the `spawn` multiprocessing start method. Overriding VLLM_WORKER_MULTIPROC_METHOD to 'spawn'. See https://docs.vllm.ai/en/latest/getting_started/troubleshooting.html#python-multiprocessing for more information. Reason: CUDA is initialized
INFO 07-01 22:19:52 [__init__.py:239] Automatically detected platform rocm.
INFO 07-01 22:19:54 [core.py:54] Initializing a V1 LLM engine (v0.8.2) with config: model='/workspace/llama_3.1_70B', speculative_config=None, tokenizer='/workspace/llama_3.1_70B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=131072, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=True, quantization=fp8, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=None, served_model_name=/workspace/llama_3.1_70B, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"level":3,"custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":512}
WARNING 07-01 22:19:54 [utils.py:2321] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f39987c87a0>
INFO 07-01 22:19:54 [parallel_state.py:954] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0
INFO 07-01 22:19:54 [rocm.py:123] Using Triton Attention backend on V1 engine.
INFO 07-01 22:19:54 [gpu_model_runner.py:1174] Starting to load model /workspace/llama_3.1_70B...
INFO 07-01 22:19:55 [rocm.py:123] Using Triton Attention backend on V1 engine.
WARNING 07-01 22:19:55 [weight_utils.py:696] DEPRECATED. Found kv_scale in the checkpoint. This format is deprecated in favor of separate k_scale and v_scale tensors and will be removed in a future release. Functionally, we will remap kv_scale to k_scale and duplicate k_scale to v_scale
INFO 07-01 22:20:25 [loader.py:447] Loading weights took 30.45 seconds
INFO 07-01 22:20:26 [gpu_model_runner.py:1186] Model loading took 81.7129 GB and 31.684221 seconds
INFO 07-01 22:20:45 [backends.py:415] Using cache directory: /root/.cache/vllm/torch_compile_cache/72327e59a9/rank_0_0 for vLLM's torch.compile
INFO 07-01 22:20:45 [backends.py:425] Dynamo bytecode transform time: 18.97 s
INFO 07-01 22:20:47 [backends.py:115] Directly load the compiled graph for shape None from the cache
INFO 07-01 22:21:47 [monitor.py:33] torch.compile takes 18.97 s in total
INFO 07-01 22:21:51 [kv_cache_utils.py:566] GPU KV cache size: 277,568 tokens
INFO 07-01 22:21:51 [kv_cache_utils.py:569] Maximum concurrency for 131,072 tokens per request: 2.12x
INFO 07-01 22:22:33 [gpu_model_runner.py:1534] Graph capturing finished in 42 secs, took 6.32 GiB
INFO 07-01 22:22:33 [core.py:151] init engine (profile, create kv cache, warmup model) took 126.88 seconds
SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=1.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=True, max_tokens=32, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None, extra_args=None)
Warming up...
output RequestOutput(request_id=0, prompt=None, prompt_token_ids=[209, 5922, 8343, 3445, 2205, 49, 4219, 1414, 6418, 1794, 6855, 4725, 1450, 2723, 3228, 3271, 6293, 9615, 9504, 7056, 459, 3313, 4837, 3711, 6500, 9201, 8538, 8569, 4813, 9080, 7524, 1549, 667, 8708, 1028, 6144, 5107, 9845, 7216, 6557, 7203, 8146, 1703, 2074, 3112, 6136, 5737, 9965, 5774, 5745, 8059, 2140, 9752, 9826, 5222, 9526, 4503, 1738, 1799, 3451, 1423, 3040, 6701, 7651, 7320, 1138, 6767, 7541, 1838, 2752, 6485, 5957, 3559, 2521, 2465, 4708, 9950, 58, 8642, 9375, 3126, 6155, 3909, 2198, 4707, 2212, 443, 8448, 7227, 7462, 9229, 8817, 5955, 911, 8142, 8158, 7190, 8780, 386, 815, 3560, 7274, 5013, 4223, 3647, 1137, 5104, 98, 9183, 5987, 3681, 8942, 8931, 6124, 726, 2988, 4585, 8090, 9581, 3488, 3540, 2530, 4025, 4106, 3720, 2380, 5261, 8705], encoder_prompt=None, encoder_prompt_token_ids=None, prompt_logprobs=None, outputs=[CompletionOutput(index=0, text='', token_ids=[10950, 112536, 2715, 5499, 90838, 51464, 34851, 14523, 1221, 15774, 10578, 5158, 18388, 5699, 5519, 3510, 29270, 23807, 15248, 9256, 29295, 10353, 16548, 7479, 1089, 13947, 29166, 968, 102521, 36793, 82432, 14088], cumulative_logprob=None, logprobs=None, finish_reason=length, stop_reason=None)], finished=True, metrics=None, lora_request=None, num_cached_tokens=None, multi_modal_placeholders={})
metrics None
